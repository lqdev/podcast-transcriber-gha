name: Podcast Transcription Workflow

on:
  issues:
    types: [opened]

jobs:
  transcribe:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'transcription') && github.event.issue.user.login == github.repository_owner
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
      models: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync

    - name: Install ffmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Process issue and transcribe audio
      id: transcribe
      env:
        ISSUE_TITLE: ${{ github.event.issue.title }}
        ISSUE_BODY: ${{ github.event.issue.body }}
      run: |
        uv run python github_action_processor.py

    - name: Post-process transcript with GitHub Models
      id: postprocess
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TRANSCRIPT_FILE: ${{ steps.transcribe.outputs.transcript_file }}
      run: |
        uv run python postprocess_transcript.py
        
        # Check if cleaned file was created, fallback to original if not
        if [ ! -f "${{ steps.postprocess.outputs.cleaned_file }}" ]; then
          echo "⚠️  Cleaned file not found, using original transcript"
          echo "cleaned_file=${{ steps.transcribe.outputs.transcript_file }}" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request
      id: create_pr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Add transcript for: ${{ steps.transcribe.outputs.title }}"
        title: "Transcript: ${{ steps.transcribe.outputs.title }}"
        body: |
          ## 🎙️ Auto-Generated Transcript
          
          **Original Issue:** #${{ github.event.issue.number }}
          **Transcript File:** `${{ steps.postprocess.outputs.cleaned_file }}`
          
          ### Summary
          This PR contains the auto-generated transcript for the podcast episode requested in issue #${{ github.event.issue.number }}.
          
          ### Processing Details
          - ✅ Audio transcribed using OpenAI Whisper
          - ✅ Post-processed with GitHub Models for improved readability
          - ✅ Formatted as clean, readable markdown
          
          ### Next Steps
          - Review the transcript for accuracy
          - Merge when satisfied with the results
          
          **Closes #${{ github.event.issue.number }}**
        branch: transcript-issue-${{ github.event.issue.number }}
        delete-branch: true

    - name: Comment on issue
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🎙️ **Transcription Complete!**\n\nI\'ve successfully transcribed your podcast episode and created a pull request with the results.\n\n**Next Steps:**\n- Review the generated transcript in the pull request\n- The transcript has been automatically cleaned and formatted\n- Merge the PR when you\'re satisfied with the results\n\nThank you for using the Podcast Transcriber! 🚀'
          })