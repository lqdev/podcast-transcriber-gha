name: Podcast Transcription Workflow

on:
  issues:
    types: [opened]

jobs:
  transcribe:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'transcription') && github.event.issue.user.login == github.repository_owner
    
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync

    - name: Process issue and transcribe audio
      id: transcribe
      env:
        ISSUE_TITLE: ${{ github.event.issue.title }}
        ISSUE_BODY: ${{ github.event.issue.body }}
      run: |
        uv run python github_action_processor.py

    - name: Post-process transcript with GitHub Models
      id: postprocess
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TRANSCRIPT_FILE: ${{ steps.transcribe.outputs.transcript_file }}
      run: |
        uv run python postprocess_transcript.py

    - name: Create Pull Request
      id: create_pr
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TRANSCRIPT_FILE: ${{ steps.postprocess.outputs.cleaned_file }}
        ISSUE_TITLE: ${{ steps.transcribe.outputs.title }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
      run: |
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Create a new branch
        BRANCH_NAME="transcript-issue-${{ github.event.issue.number }}"
        git checkout -b "$BRANCH_NAME"
        
        # Add the transcript file
        git add "${{ steps.postprocess.outputs.cleaned_file }}"
        
        # Commit changes
        git commit -m "Add transcript for: ${{ steps.transcribe.outputs.title }}"
        
        # Push branch
        git push origin "$BRANCH_NAME"
        
        # Create pull request using GitHub API
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Content-Type: application/json" \
          -d '{
            "title": "Transcript: ${{ steps.transcribe.outputs.title }}",
            "body": "This PR contains the auto-generated transcript for issue #${{ github.event.issue.number }}\n\n**Original Issue:** #${{ github.event.issue.number }}\n**Transcript File:** `${{ steps.postprocess.outputs.cleaned_file }}`\n\nThe transcript has been automatically generated using OpenAI Whisper and post-processed with GitHub Models for better readability.\n\nCloses #${{ github.event.issue.number }}",
            "head": "$BRANCH_NAME",
            "base": "main"
          }' \
          https://api.github.com/repos/${{ github.repository }}/pulls

    - name: Comment on issue
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üéôÔ∏è **Transcription Complete!**\n\nI\'ve successfully transcribed your podcast episode and created a pull request with the results.\n\n**Next Steps:**\n- Review the generated transcript in the pull request\n- The transcript has been automatically cleaned and formatted\n- Merge the PR when you\'re satisfied with the results\n\nThank you for using the Podcast Transcriber! üöÄ'
          })